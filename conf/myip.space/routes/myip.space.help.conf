location / {
    default_type 'text/plain';
    content_by_lua_block {
        ngx.header["My-IP-Space"] = "Visit /help for more information."
        local remote_addr = ngx.var.REMOTE_ADDR;
        if remote_addr:find("^::ffff:") ~= nil then
            remote_addr = remote_addr:gsub("::ffff:", "")
        end 
        local ua = ngx.req.get_headers()['User-Agent']
        if type(ua) == "table" then
            ua = ua[1]
        end 
        agent = ua:gmatch("%S+")()
        agent = agent:gmatch("(.+)/")()
        if agent == "Mozilla" then
            ngx.header["Content-Type"] = "text/html"
            ngx.say("<!DOCTYPE html>"..
"<html><head><style>"..
"ul#menu {padding:0;}"..
"ul#menu li {display:inline;}"..
"</style></head><body>"..
"<ul id=\"menu\">"..
"  <li>[ <a href=\"/\">myip.space</a> ]</li>"..
"  <li>[ <a href=\"/help\">help</a> ]</li>"..
"  <li>[ <a href=\"http://ipv4only.myip.space\">IPv4 only</a> ]</li>"..
"  <li>[ <a href=\"http://ipv6only.myip.space\">IPv6 only</a> ]</li>"..
"</ul>"..
"<h3>"..remote_addr.."</h3>"..
"</body></html>")
        else
            ngx.say(remote_addr)
        end 
    }   
}   
[root@www0.pub.adversec.com myip.space]# > cat routes/myip.space.help.conf
location /help {
    default_type 'text/plain';
    content_by_lua_block {
    local help_html = [[<!DOCTYPE html>
<html>
<head>
<style>
table tr td {padding-left:25px;}
</style>
</head>
<body>
<h2>myip.space</h2>

<h4>Endpoints</h4>

<table>
<tr>
    <td><a href="http://myip.space">myip.space</a></td>
    <td>Dual-stack (IPv4 & IPv6)</td>
</tr>
<tr>
    <td><a href="http://ipv4only.myip.space">ipv4only.myip.space</a></td>
    <td>IPv4-only endpoint</td>
</tr>
<tr>
    <td><a href="http://ipv6only.myip.space">ipv6only.myip.space</a></td>
    <td>IPv6-only endpoint</td>
</tr>
</table>

<h4>Resources</h4>

<table>
<tr>
    <td><a href="/">/</a></td>
    <td>Return the remote address</td>
</tr>
<tr>
    <td><a href="/help">/help</a></td>
    <td>Print this help page</td>
</tr>
<tr>
    <td><a href="/http/cookie">/http/cookie</a></td>
    <td>Return a HTTP Cookie header</td>   
</tr>
<tr>
    <td><a href="/http/cookie/set">/http/cookie/set</a></td>
    <td>Return a HTTP Set-Cookie header</td>
</tr>
<tr>
    <td><a href="/http/cookie/set/httponly">/http/cookie/set/httponly</a></td>
    <td>Return a HTTP Set-Cookie header with a HttpOnly cookie</td>
</tr>
<tr>
    <td><a href="/http/cookie/set/httponly_secure">/http/cookie/set/httponly_secure</a></td>
    <td>Return a HTTP Set-Cookie header with a HTTPOnly and secure cookie</td>
</tr>
<tr>
    <td><a href="/http/cookie/set/secure">/http/cookie/set/secure</a></td>
    <td>Return a HTTP Set-Cookie Header with a secure cookie</td>
</tr>
<tr>
    <td><a href="/http/headers">/http/headers</a></td>
    <td>Print all HTTP headers sent by the client</td>
</tr>
<tr>
    <td><a href="/ssl/cipher">/ssl/cipher</a></td>
    <td>Print cipher of established SSL/TLS session</td>
</tr>
<tr>
    <td><a href="/ssl/client/ciphers">/ssl/client/ciphers</a></td>
    <td>Print list of ciphers supported by the client</td>
</tr>
<tr>
    <td><a href="/ssl/client/curves">/ssl/client/curves</a></td>
    <td>Print list of curves supported by the client</td>
</tr>
<tr>
    <td><a href="/ssl/client/cert">/ssl/client/cert</a></td>
    <td>Print client certificate</td>
</tr>
</table>

<h5>myip.space is also available via HTTPS</h5>

<ul>
<li><a href="https://myip.space">https://myip.space</a></li>
<li><a href="https://ipv4only.myip.space">https://ipv4only.myip.space</a></li>
<li><a href="https://ipv6only.myip.space">https://ipv6only.myip.space</a></li>
</ul>

<h5>Use myip.space on your shell</h5>

<table>
<tr>
    <td>POSIX</td>
    <td>alias myip="curl https://myip.space/"</td>
</tr>

<tr>
    <td>PowerShell</td>
    <td>function myip { (iwr https://myip.space/).content }</td>
</tr>
</table>

<h5>The configuration files are available on GitHub</h5>

<ul>
<li><a href="https://github.com/takeshixx/myip.space">https://github.com/takeshixx/myip.space</a></li>
</ul>
</body>
</html>]]
    local help_text = [[Welcome to myip.space!

Endpoints:

myip.space              Dual-stack (IPv4 & IPv6)
ipv4only.myip.space     IPv4-only endpoint
ipv6only.myip.space     IPv6-only endpoint

Resources:

/                                   Return the remote address
/help                               Print this help page
/http/cookie                        Return a HTTP Cookie header
/http/cookie/set                    Return a HTTP Set-Cookie header
/http/cookie/set/httponly           Return a HTTP Set-Cookie header with a HttpOnly cookie
/http/cookie/set/httponly_secure    Return a HTTP Set-Cookie header with a HTTPOnly and secure cookie
/http/cookie/set/secure             Return a HTTP Set-Cookie Header with a secure cookie
/http/headers                       Print all HTTP headers sent by the client
/ssl/cipher                         Print cipher of established SSL/TLS session
/ssl/client/ciphers                 Print list of ciphers supported by the client
/ssl/client/curves                  Print list of curves supported by the client
/ssl/client/cert                    Print client certificate

--

* myip.space is also available via HTTPS:

    https://myip.space
    https://ipv4only.myip.space
    https://ipv6only.myip.space

* Use myip.space on your shell:

    POSIX:      alias myip="curl https://myip.space/"

    PowerShell: function myip { (iwr https://myip.space/).content }

* The configuration files are available on GitHub:

    https://github.com/takeshixx/myip.space]]

        local ua = ngx.req.get_headers()['User-Agent']
        if type(ua) == "table" then
            ua = ua[1]
        end 
        agent = ua:gmatch("%S+")()
        agent = agent:gmatch("(.+)/")()
        if agent == "Mozilla" then
            ngx.header["Content-Type"] = "text/html"
                        ngx.say(help_html)
        else
            ngx.say(help_text)
        end
    }
}
